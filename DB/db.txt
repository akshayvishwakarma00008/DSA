183.
 Customers Who Never Order
select distinct name as Customers
from customers c
where name not in (
select distinct name
from customers c
join orders o on o.customerId=c.id
)



182. Duplicate Emails
select email
from person
group by email
having count(email) >= 2



181. Employees Earning More Than Their Managers
SELECT e.name as Employee
FROM employee e
JOIN employee m ON e.managerId = m.id
WHERE e.salary > m.salary;



184. Department Highest Salary
select d.name as Department, e.name as Employee, e.salary
from employee e
join department d on d.id=e.departmentId
where e.salary in (
    select max(salary) 
    from employee
    where departmentId = e.departmentId
)



185. Department Top Three Salaries
SELECT 
  d.name AS Department,
  e.name AS Employee,
  e.salary
FROM (
  SELECT *,
         DENSE_RANK() OVER (PARTITION BY departmentId ORDER BY salary DESC) AS rnk
  FROM employee
) e
JOIN department d ON d.id = e.departmentId
WHERE rnk <= 3;




Q. Write a query to find the node type of Binary Tree ordered by the value of the node. Output one of the following for each node:

Root: If node is root node.
Leaf: If node is leaf node.
Inner: If node is neither root nor leaf node.

solution :
select n, case
    when p is null then 'Root' 
    when n not in (select distinct p from bst where p is not null) then 'Leaf'
    else 'Inner'
    end as node_type
from bst
order by n;


